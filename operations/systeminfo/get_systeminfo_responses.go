// Code generated by go-swagger; DO NOT EDIT.

package systeminfo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// GetSysteminfoOKCode is the HTTP code returned for type GetSysteminfoOK
const GetSysteminfoOKCode int = 200

/*GetSysteminfoOK Get general info successfully.

swagger:response getSysteminfoOK
*/
type GetSysteminfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralInfo `json:"body,omitempty"`
}

// NewGetSysteminfoOK creates GetSysteminfoOK with default headers values
func NewGetSysteminfoOK() *GetSysteminfoOK {

	return &GetSysteminfoOK{}
}

// WithPayload adds the payload to the get systeminfo o k response
func (o *GetSysteminfoOK) WithPayload(payload *models.GeneralInfo) *GetSysteminfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get systeminfo o k response
func (o *GetSysteminfoOK) SetPayload(payload *models.GeneralInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSysteminfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSysteminfoInternalServerErrorCode is the HTTP code returned for type GetSysteminfoInternalServerError
const GetSysteminfoInternalServerErrorCode int = 500

/*GetSysteminfoInternalServerError Internal server error

swagger:response getSysteminfoInternalServerError
*/
type GetSysteminfoInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetSysteminfoInternalServerError creates GetSysteminfoInternalServerError with default headers values
func NewGetSysteminfoInternalServerError() *GetSysteminfoInternalServerError {

	return &GetSysteminfoInternalServerError{}
}

// WithXRequestID adds the xRequestId to the get systeminfo internal server error response
func (o *GetSysteminfoInternalServerError) WithXRequestID(xRequestID string) *GetSysteminfoInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get systeminfo internal server error response
func (o *GetSysteminfoInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get systeminfo internal server error response
func (o *GetSysteminfoInternalServerError) WithPayload(payload *models.Errors) *GetSysteminfoInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get systeminfo internal server error response
func (o *GetSysteminfoInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSysteminfoInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
